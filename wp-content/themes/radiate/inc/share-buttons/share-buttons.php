<?php
/**
 * ATF Share Buttons - Implements a wrapper over the Social_Buttons Auctollo lib.
 * The lib contains the code for generating the share buttons together with the
 * js needed to be added for each individual service.
 *
 * Note that the 'Auctollo Social Sharing Buttons' widget is dependent on this
 * extension so it will be  unregistered once the 'atf-social-share-buttons'
 * support is removed.
 *
 * There is also an option to enable the functionality of 'Custom share buttonns'.
 * This feature alows you to output 'static' markup for the sharing buttons
 * that is not generated by JS and can be styled to match the page deisgn.
 * Methods to retrieve the share counts are also available for these buttons.
 *
 * ### Custom Share buttons (feature):
 *
 * As a configuration option yo can enable the use of custom share buttons.
 * These are buttons that are not generated using the serice JS and can be
 * easily customized. Together with the buttons markup the share count for
 * individual URLs can be retrieved from each individual sharing services.
 *
 * In order to minimize the server load and to not query the sharing services on
 * each page load 2 queues are constatnly formed that are being consumed by a
 * cron job based on a schedule. These quueues are:
 * 1. the list of url that were last visited.
 * 2. the list of posts that were recently added.
 *
 * In order to activate this feature you need to first filter the extension
 * config (see [`atf_social_share_buttons_enabled_features`](Social-Share-Buttons#filter-atf_social_share_buttons_enabled_features)) and set
 * 'use_custom_share_buttons' to true. Once this is done you need to switch the
 * theme on and off (switch to another theme and then back to the curent one) so
 * that the new database table can be set up.
 *
 * A custom share button can be generated by passing to the 'atf_share_buttons'
 * function the 'custom' => true to a specific service.
 * Example:
 * ```php
 * $share_buttons = array( 'twitter' 	=> array( 'custom' => true ),
 *                         'facebook' 	=> array( 'client_id' => 'XXXXXX', 'custom' => true ),
 * );
 *
 * echo atf_share_buttons( $share_buttons );
 * ```
 * @package ATF_Social_Share_Buttons
 * @version 0.1.0
 * @author Sabin Sanislav <ssanislav@w3-edge.eu>
 * @link
 * @license http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 *
 * @chapter 10
 * @id atf-social-share-buttons
 * @default-status Enabled
 */


global $custom_share_buttons;
$custom_share_buttons = false;
$prefix = get_template_directory() . '/inc/share-buttons/';

require $prefix . 'core.php';

$default_features = array(
	'use_custom_share_buttons' => true,
);


/**
 * Filters the extension config. By default the custom share buttons is not
 * enabled. This feature requires the setup of a new database table as well as
 * a cron setup so it must explicitly be turned on in order to work.
 *
 * @param array $default_features. Array of key - value paris containing the
 * extension features as keys with true / false as values.
 *
 * @return array The filtered features
 * @since 0.1.0
 */
$default_features = apply_filters( 'atf_social_share_buttons_enabled_features', $default_features );
/** On switch theme if use_custom_share_buttons is true create the necessary table */
if ( isset( $default_features['use_custom_share_buttons'] ) && $default_features['use_custom_share_buttons'] ) {
	require $prefix . 'custom_shares.php';
	global $custom_share_buttons;

	$custom_share_buttons = new ATF_Custom_Share_Buttons();

	/** Setup DB if necessary */
	add_action( 'after_switch_theme', array( $custom_share_buttons, 'setup_db' ) );

	/** TODO: remove this and write about calling this in single templates or wherever */
	// add_action( 'wp_head', array( $custom_share_buttons, 'setup_cron_queue' ) );
}



/**
 *
 * Can be used as follows:
 * ```php
 * $share_buttons = array(
 *                             'twitter'               => array(
 *                                                             'status' => '',  // data-text param
 *                                                             'show_tweet_count' => 'none',// horizontal, none, vertical
 *                                                             'via_user' => '', // data-via param
 *                                                             'recommend_user' => '', // data-related
 *                                                             'share_hashtag_value' => '', // data-hashtags
 *                                                             'size' => ''atf_share_button_count, // large
 *                                                             'verb_to_display' =>  ''
 *                                                     ),
 *                             'facebook'              => array(
 *                                                             'client_id' => '',
 *                                                             'layout_style' => 'standard',//button_count, box_count
 *                                                             'container_width' => 450,
 *                                                             'show_faces' => 'false',
 *                                                             'send_button' => 'false',
 *                                                             'color_scheme' => '',//light, dark
 *                                                             'font' => '',//arial,lucida grande,segoe ui,tahoma,trebuchet ms,verdana
 *                                                             'verb_to_display' => ''//like, recommend
 *                                                     ),
 *                             'facebook-subscribe'    => array(
 *                                                             'client_id' => '',
 *                                                             'layout_style' => 'standard',//button_count, box_count
 *                                                             'container_width' => 400,
 *                                                             'show_faces' => 'false',
 *                                                             'send_button' => 'false',
 *                                                             'layout_style' => '',
 *                                                             'color_scheme' => '',//light, dark
 *                                                             'font' => '',//arial,lucida grande,segoe ui,tahoma,trebuchet ms,verdana
 *                                                             'url' => ''//profile url
 *                                                     ),
 *                             'facebook-share'        => array(
 *                                                             'client_id' => '',
 *                                                             'layout_style' => 'button' //link, icon_link, button, button_count, box_count
 *                                                     ),
 *                             'gplus'                 => array(
 *                                                             'size' => 'medium',//small,medium,standard,tall
 *                                                             'annotation' => 'none',//bubble,inline,none
 *                                                             'container_width' => '',
 *                                                             'callback' => '',
 *                                                             'html5' => false
 *                                                     ),
 *                             'pinterest'             => array(
 *                                                             'size' => 'horizontal',//horizontal,vertical,none
 *                                                             'status' => '',
 *                                                             'append_thumbnail' => false,
 *                                                             'media' => '%image_encoded%'
 *                                                             ),
 *                             'linkedin'              => array(
 *                                                             'size' => '',//top,right,standard
 *                                                             'showzero' => '',
 *                                                             'onsuccess' => ''
 *                                                            ),
 *                             'digg'                  => array(
 *                                                             'size' => 'DiggCompact',//DiggWide,DiggMedium,DiggCompact,DiggIcon
 *                                                             'status' => '',
 *                                                             'related_stories' => '',
 *                                                             'media_type' => '',
 *                                                             //none,business,enterntainment,gaming,lifestyle,offbeat,politics,science,sports,technology,world_news
 *                                                             ),
 *                             'stumbleupon'           => array(
 *                                                             'size' => '4'
 *                                                            // 1 - Small (square counter)
 *                                                            // 2 - Small (rounded counter)
 *                                                            // 3 - Small (with counter)
 *                                                            // 4 - Small (without counter)
 *                                                            // 5 - Tall (with counter)
 *                                                            // 6 - Tall (without counter)
 *                                                           ),
 *                           'tumblr'               => array(
 *                                                           'size' => '',
 *                                                           // 1  - Tumblr +
 *                                                           // 1T - Tumblr + (Gray)
 *                                                           // 2  - Tumblr
 *                                                           // 2T - Tumblr (Gray)
 *                                                           // 3  - Share on Tumblr
 *                                                           // 3T - Share on Tumblr (Gray)
 *                                                           // 4  - Icon
 *                                                           // 4T - Icon (Gray)
 *                                                           'status' => ''
 *                                                           ),
 *                           'myspace'               => array(
 *                                                           'size' => 'Myspace_btn_Share',
 *                                                            // Myspace_16 - small icon (16px)
 *                                                            // Myspace_20 - medium icon (20px)
 *                                                            // Myspace_32 - large icon (33px)
 *                                                            // Myspace_36 - large icon (36px)
 *                                                            // Myspace_btn_Share - "Share" text
 *                                                           'status' => ''
 *                                                           )
 *                       );
 *
 *  echo atf_share_buttons( $share_buttons );
 * ```
 *
 * Note that in order to display the FB buttons you need to send 'client_id'
 * key with a valid value or set this in the ATF Settings Page.
 *
 * @param array $share_buttons Multidimensional array containing the sharing services
 * together with their individual customization params
 *
 * @return string sharing button(s) markup.
 *
 * @since 0.1.0
 */
function atf_share_buttons( $share_buttons = array( 'gplus', 'twitter' ) ) {
	return ATF_Share_Buttons::get_sharing_buttons( $share_buttons );
}


/**
 * Returns the share count on a specific service for the given url.
 *
 * Call this function in order to retrieve the number of shares for a specific
 * url on a specific service. It queries the local DB instead of the service API.
 *
 * To get the total number of shares for the given url call the function without
 * specifying the service arg.
 *
 * To get the number of shares for multiple services at once (this will optimize the
 * load on the database) send the services arg as array with keys = service slugs:
 * `$services = array( 'twitter', 'facebook' );`
 *
 * It returns an array with key(s) = sharing service and value = number of
 * shares on that service
 *
 * @param string $url url to get the data for
 * @param string | array
 *
 * @return array $shares. Key is service slug and value is shares count
 *
 * @since 0.1.0
 */
function atf_share_button_count( $url = '', $services = 'all' ) {
	global $custom_share_buttons;
	if ( empty( $url ) || $custom_share_buttons === false )
		return 0;

	$shares = $custom_share_buttons->get_local_url_share_statistics( $url, $services );

	return $shares;
}


/**
 * Returns the share count on a specific service for the given url.
 *
 * This should only be used by cron or with great care as the value
 * is being retrieved from the service API and not from local DB. The
 * number of calls on the service APIs is limited per day.
 *
 * It returns an array with key(s) = sharing service
 * slug and value = number of shares on that service
 *
 *
 * @param string $url url to get the data for
 * @param string $serice slug of the serice for which to get the
 *                       share count from
 *
 * @return array $shares. Key is service slug and value is shares count
 *
 * @since 0.1.0
 */
function atf_share_button_service_count( $url = '', $service = 'all' ) {
	global $custom_share_buttons;
	if ( empty( $url ) || $custom_share_buttons === false )
		return 0;

	if ( 'all' != $service and is_string( $service ) )
		$shares[$service] = $custom_share_buttons->get_url_share_statistics( $url, 0, $serivce );
	else if ( is_array( $service ) ) {
		foreach ( $service as $k ) {
			$shares[$k] = $custom_share_buttons->get_url_share_statistics( $url, 0, $k );
		}
	}

	return $shares;
}


/**
 * Function to be called by cron to update share counts for the urls in queues
 *
 * There are 2 queues to process. The one which holds latest visited urls
 * and another one which holds the latest added posts. To update the share
 * counts for the latest added posts call the function with queue = 'any_string'
 * By default it will process the latest visited posts.
 *
 * @param string $queue The queue to process.
 *
 * @return object $this
 *
 * @since 0.1.0
 */
function atf_custom_share_buttons_send_update_from_cron( $queue = 'next_to_query_queue' ) {
	global $custom_share_buttons;
	if ( $custom_share_buttons === false )
		return;

	$custom_share_buttons->send_update_from_cron( $queue );
}